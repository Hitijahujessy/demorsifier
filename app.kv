#:import Factory kivy.factory.Factory
#: import WipeTransition kivy.uix.screenmanager.WipeTransition
#:import Clipboard kivy.core.clipboard.Clipboard
#:import Clock kivy.clock
#:import os os
#:import webbrowser webbrowser

<DemorsifierApp>:
    size: root.size
    pos: root.pos

<MorseLabel@Label>:
    markup: True
    color: 0, 0, 0, 1
    font_size: self.width / 20
    text_size: self.width, None
    valign: "top"
    halign: "left"
    bold: True
    size_hint: self.width, None
    height: self.texture_size[1]
    hidden_text: ""

<SpeedButton@Button>:
    group: "speed_multiplier"
    text: " "
    on_release: app.root.current_screen.change_tempo(int(self.text)); app.root.current_screen.update_buttons()
    background_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos


<MenuScreen>:
    BoxLayout:
        Button:
            text: 'Go to morsifier'
            on_press: root.manager.current = 'morsifier'
        Button:
            text: 'Go to demorsifier'
            on_press: root.manager.current = 'demorsifier'

<DemorsifierScreen>:
    upload_label: upload_label
    canvas.before:
        Color:
            rgba: (.22, .22, .22, 1)
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        size: root.size
        pos: root.pos

        # Image:
        #     id: logo
        #     source: "./images/morsifier.png"
        #     size_hint: .5, .5
        #     pos_hint: {"center_x": .475, "center_y": .9}
        #     color: (1, 1, 1, 1)
        Label:
            id: logo
            text: "DEMORSIFIER"
            size_hint: .5, .5
            bold: True
            font_size: 72
            pos_hint: {"center_x": .475, "center_y": .9}
            color: (1, 1, 1, 1)

        Button:
            id: menu_button
            text: "Menu"
            text_size: self.size
            font_size: self.width/5
            bold: True
            halign: "center"
            valign: "middle"
            size_hint: .075, .075
            pos_hint: {"x": .085, "top": .975}
            on_press: 
                app.root.current = "menu"
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   

        Button:
            id: upload_file
            text_size: self.size
            font_size: self.width/5
            text: "upload"
            bold: True
            halign: "center"
            valign: "middle"
            on_press: app.root.current_screen.sound.stop()
            on_release: root.show_load()
            pos_hint: {"center_x": .475, "center_y": .75}
            size_hint: .08, .09
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   
            
        # Upload Label
        Label:
            id: upload_label
            text: "No file selected"
            pos_hint: {"center_x": .475, "center_y": .815}
            font_size: 24
            hidden_text: ""

        # Upper Label
        ScrollView:
            id: scroll_view
            do_scroll_x: False
            do_scroll_y: True
            size_hint: .95, .25
            pos_hint: {"center_x": .5, "center_y": .4325}
            # effect_cls: "ScrollEffect" # to disable "bouncing"
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 0.5
                RoundedRectangle:
                    size: self.size
                    pos: self.pos

            GridLayout:
                id: scroll_layout
                cols: 1
                pos: root.pos
                height: self.minimum_height
                padding: 25, 0, 50, 0
                size_hint_y: None

                MorseLabel:
                    id: morselabel_upper
                    text: ""


        
        # Lower Label
        ScrollView:
            id: scroll_view2
            do_scroll_x: False
            do_scroll_y: True
            size_hint: .95, .25
            pos_hint: {"center_x": .5, "center_y": .15}
            canvas.before:
                Color:
                    rgba: (1, 1, 1, .5)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos

            GridLayout:
                id: scroll_layout2
                cols: 1
                pos: root.pos
                padding: 25, 0, 50, 0
                height: self.minimum_height
                size_hint_y: None
                MorseLabel:
                    id: morselabel_lower
                    text: ""

        Button:
            id: copy_morse_upper
            text_size: self.size
            font_size: self.width/4
            disabled: False
            halign: "center"
            valign: "middle"
            on_release: Clipboard.copy(Clipboard.copy(morselabel_upper.text))
            pos_hint: {"x": .94, "center_y": .5325}
            size_hint: .03, .04
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, 0, 0, 0) if self.state == "normal" else (1, 1, 1, .2)
                RoundedRectangle:
                    size: scroll_view.size
                    pos: scroll_view.pos   
            Image:
                source: "./images/icons/copy.png"
                size: copy_morse_upper.size #copy_morse.size[0] *0.9, copy_morse.size[1] *0.9
                pos: copy_morse_upper.pos #copy_morse.x*1.045, copy_morse.y*1

        ToggleButton:
            id: minimize_upper
            bold: True
            text_size: self.size
            font_size: 37
            halign: "center"
            valign: "top"
            on_press: 
                app.root.current_screen.scrollview_no = 1; 
                app.root.current_screen.minimize_label() if self.state == "down" else app.root.current_screen.maximize_label()
            pos_hint: {"x": .90, "center_y": .5325}
            size_hint: .032, .042
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, 0, 0, 0) if self.state == "normal" else (0, 0, 0, .2)
                RoundedRectangle:
                    size: scroll_view.size
                    pos: scroll_view.pos   
            Image:
                source: "images/icons/minimize.png" if minimize_upper.state == "normal" else "images/icons/maximize.png"
                size: minimize_upper.size
                pos: minimize_upper.pos

        Button:
            id: copy_morse_lower
            text_size: self.size
            font_size: self.width/4
            disabled: False
            halign: "center"
            valign: "middle"
            on_release: Clipboard.copy(app.root.current_screen.clipboard)
            pos_hint: {"x": .94, "center_y": .25}
            size_hint: .03, .04
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, 0, 0, 0) if self.state == "normal" else (1, 1, 1, .2)
                RoundedRectangle:
                    size: scroll_view2.size
                    pos: scroll_view2.pos   
            Image:
                source: "./images/icons/copy.png"
                size: copy_morse_lower.size #copy_morse.size[0] *0.9, copy_morse.size[1] *0.9
                pos: copy_morse_lower.pos #copy_morse.x*1.045, copy_morse.y*1

        ToggleButton:
            id: minimize_lower
            bold: True
            text_size: self.size
            font_size: 37
            halign: "center"
            valign: "top"
            on_press: 
                app.root.current_screen.scrollview_no = 2;
                app.root.current_screen.minimize_label() if self.state == "down" else app.root.current_screen.maximize_label()
            pos_hint: {"x": .9075, "center_y": .25}
            size_hint: .032, .042
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, 0, 0, 0) if self.state == "normal" else (0, 0, 0, .2)
                RoundedRectangle:
                    size: scroll_view2.size
                    pos: scroll_view2.pos   
            Image:
                source: "images/icons/minimize.png" if minimize_lower.state == "normal" else "images/icons/maximize.png"
                size: minimize_lower.size
                pos: minimize_lower.pos

        GridLayout:
            id: sound_control_grid
            cols: 3
            pos_hint: {"center_x": .125, "center_y": .61}
            size_hint: .2, .075
            spacing: 18


            ToggleButton:
                id: loop_toggle
                #text: "Loop"
                disabled: False
                on_press: app.root.current_screen.loop_toggle()
                background_color: 0, 0, 0, 0
                canvas.before:
                    Color:
                        rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                    RoundedRectangle:
                        size: self.size
                        pos: self.pos   
                Image:
                    source: "./images/icons/loop.png"
                    size: loop_toggle.size
                    pos: loop_toggle.x*1.045, loop_toggle.y                
            
            ToggleButton:
                id: mute_sound
                text_size: self.size
                font_size: self.width/4
                disabled: False
                halign: "center"
                valign: "middle"
                on_press: app.root.current_screen.mute_sound()
                background_color: 0, 0, 0, 0
                canvas.before:
                    Color:
                        rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                    RoundedRectangle:
                        size: self.size
                        pos: self.pos   
                Image:
                    source: "./images/icons/unmute.png" if  mute_sound.state == "normal" else "./images/icons/mute.png"
                    size: mute_sound.size[0] *0.9, mute_sound.size[1] *0.9
                    pos: (mute_sound.x*1.05, mute_sound.y*1.005) if mute_sound.state == "normal" else (mute_sound.x*1.05, mute_sound.y*1.005)

            ToggleButton:
                id: play_pause
                disabled: True if upload_label.hidden_text == "" else False
                text_size: self.size
                font_size: self.width/5
                halign: "center"
                valign: "middle"
                on_press: 
                    app.root.current_screen.resume_audio() if self.state != "normal" else app.root.current_screen.pause_audio();
                    app.root.current_screen.update_soundpos() if self.state != "normal" else app.root.current_screen.update_soundpos.cancel();
                background_color: 0, 0, 0, 0
                canvas.before:
                    Color:
                        rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                    RoundedRectangle:
                        size: self.size
                        pos: self.pos   
                Image:
                    source: "./images/icons/play.png" if play_pause.state == "normal" else "./images/icons/pause.png"
                    size: play_pause.size[0] *0.6, play_pause.size[1] *0.6
                    pos: play_pause.x*1.06, play_pause.y*1.025
        Slider:
            id: audio_slider
            min: 0
            max: 1
            value_track: True
            disabled: True
            value: 0 
            cursor_size: 25, 25
            cursor_disabled_image: "images/transparent.png"
            size_hint: .5, .05
            pos_hint: {"center_x": .5, "center_y": .6}
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 0.25
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
        Label:
            id: track_position
            text: "00:00 | 00:00"
            pos_hint: {"center_x": .295, "center_y": .64}
            font_size: 24
            

        ToggleButton:
            id: morse_light
            pos_hint: {"center_x": .875, "center_y": .625}
            size_hint: .2, .1
            active: True
            #text: "    Toggle flashlight" if self.state == "normal" else ""
            background_color: (0, 0, 0, 0)
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1)
                RoundedRectangle:
                    size: self.size #self.size[0] // 2, self.size[1] // 2
                    pos: self.pos #self.pos[0] + self.size[0] // 4, self.pos[1] + self.size[1] //4
                Color:
                    rgba: root.flashlight_color if self.state == "down" else (0,0,0,0)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
            Image:
                source: "./images/icons/flashlight_off.png" if morse_light.state=="normal" else "./images/icons/flashlight.png"
                pos: morse_light.pos[0]*1.095, morse_light.pos[1] *1.0125  #copy_morse.x*1.045, copy_morse.y*1



        Button:
            id: github
            on_release: webbrowser.open("https://github.com/Hitijahujessy/demorsifier")
            size_hint: 0.07,0.08
            pos_hint: {"x": .01, "top": .98}
            background_color: 0, 0, 0, 0
            canvas.after:
                Color:
                    rgba: (1, 1, 1, 1) if self.state == "normal" else (.8, .8, .8, 1)
                Rectangle:
                    pos: self.pos
                    source: "./images/github-mark.png"
                    size: github.size


<LoadDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            rootpath: "/Users"
            filters: ["*.wav", "*.mp3"]
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 60
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 60
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: 
                    root.load(filechooser.path, filechooser.selection);
                    app.root.current_screen.upload_label.hidden_text = text_input.text;
                    app.root.current_screen.upload_label.text = os.path.basename(text_input.text)
                    app.root.current_screen.translate_to_morse()


<MorsifierScreen>:
    canvas.before:
        Color:
            rgba: (.22, .22, .22, 1)
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        size: root.size
        pos: root.pos

        Image:
            id: logo_m
            source: "./images/morsifier.png"
            size_hint: .5, .5
            pos_hint: {"center_x": .475, "center_y": .9}
            color: (1, 1, 1, 1)

        Button:
            id: menu_button
            text: "Menu"
            text_size: self.size
            font_size: self.width/5
            bold: True
            halign: "center"
            valign: "middle"
            size_hint: .075, .075
            pos_hint: {"x": .085, "top": .975}
            on_press: 
                app.root.current = "menu"
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   

        TextInput:
            id: string_morsify_m
            disabled: False
            size_hint: .84, .1
            font_size: "27sp"
            pos_hint: {"center_x": .445, "center_y": .75}
            foreground_color: 0, 0, 0, 1
            background_color: (1, 1, 1, 1)
            background_active: "./images/textinput_focus.png" #self.background_normal
            background_normal: "./images/textinput_unfocus.png"
            hint_text: "Type your message here..."
            hint_text_color: 0, 0, 0, .45

        Button:
            id: proceed_button_m
            text: "Proceed"
            text_size: self.size
            font_size: "18sp"
            halign: "center"
            valign: "middle"
            disabled: True if string_morsify_m.text == "" else False
            on_press: app.root.current_screen.text_string = string_morsify_m.text.upper(); app.root.current_screen.translate_to_morse()
            on_release: app.root.current_screen.do_proceed(); copy_morse_m.disabled = False; self.disabled = True; string_morsify_m.disabled = True
            size_hint: .1, .045
            pos_hint: {"center_x": .925, "center_y": .778}
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos

        Button:
            id: reset_button_m
            text: "Reset"
            text_size: self.size
            font_size: "18sp"
            halign: "center"
            valign: "middle"
            on_press: app.root.current_screen.typewriter.cancel(); app.root.current_screen.morse_loop.cancel()
            on_release: string_morsify_m.text = ""; string_morsify_m.disabled = False;  copy_morse_m.disabled = True; app.root.current_screen.delete_file(); app.root.current_screen.clipboard = ''; app.root.current_screen.delete_labels()
            size_hint: .1, .045
            pos_hint: {"center_x": .925, "center_y": .722}
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos


        ScrollView:
            id: scroll_view_m
            do_scroll_x: False
            do_scroll_y: True
            size_hint: .95, .4
            pos_hint: {"center_x": .5, "center_y": .25}
            # effect_cls: "ScrollEffect" # to disable "bouncing"
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 0.5
                RoundedRectangle:
                    size: self.size
                    pos: self.pos

            GridLayout:
                id: scroll_layout_m
                cols: 1
                pos: root.pos
                height: self.minimum_height
                size_hint_y: None

        ToggleButton:
            id: loop_toggle_m
            #text: "Loop"
            disabled: False
            on_press:
                app.root.current_screen.loop_toggle();
            pos_hint: {"center_x": .06, "center_y": .625}
            size_hint: .07, .08
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   
            Image:
                source: "./images/icons/loop.png"
                size: loop_toggle_m.size
                pos: loop_toggle_m.x*1.045, loop_toggle_m.y
                        

        GridLayout:
            id: button_grid_m
            cols: 5
            pos_hint: {"center_x": .8, "center_y": .575}
            size_hint: .35, .17975
            spacing: 22.78

        ToggleButton:
            id: morse_light_m
            pos_hint: {"center_x": .4, "center_y": .575}
            text: "turn on flashlight"
            size_hint: .35, .17975
            active: True
            text: "Toggle flashlight" if self.state == "normal" else ""
            background_color: (0, 0, 0, 0) if self.state == "normal" else (0,0,0,0)
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1)
                RoundedRectangle:
                    size: self.size[0] // 2, self.size[1] // 2
                    pos: self.pos[0] + self.size[0] // 4, self.pos[1] + self.size[1] //4
                Color:
                    rgba: root.flashlight_color if self.state == "down" else (0,0,0,0)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                
        
        Button:
            id: copy_morse_m
            text_size: self.size
            font_size: self.width/4
            disabled: True
            halign: "center"
            valign: "middle"
            on_release: Clipboard.copy(app.root.current_screen.clipboard)
            pos_hint: {"center_x": .145, "center_y": .625}
            size_hint: .07, .08
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   
            Image:
                source: "./images/icons/copy.png"
                size: copy_morse_m.size[0] *0.9, copy_morse_m.size[1] *0.9
                pos: copy_morse_m.x*1.045, copy_morse_m.y*1


        ToggleButton:
            id: mute_sound_m
            text_size: self.size
            font_size: self.width/4
            disabled: False
            halign: "center"
            valign: "middle"
            on_release: app.root.current_screen.mute_sound_m();
            pos_hint: {"center_x": .06, "center_y": .525}
            size_hint: .07, .08
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   
            Image:
                source: "./images/icons/unmute.png" if  mute_sound_m.state == "normal" else "./images/icons/mute.png"
                size: mute_sound_m.size[0] *0.9, mute_sound_m.size[1] *0.9
                pos: (mute_sound_m.x*1.25, mute_sound_m.y*1.005) if mute_sound_m.state == "normal" else (mute_sound_m.x*1.1125, mute_sound_m.y*1.005)


        Button:
            id: download_morse_m
            text_size: self.size
            font_size: self.width/5
            halign: "center"
            valign: "middle"
            on_release: app.root.current_screen.show_save()
            pos_hint: {"center_x": .145, "center_y": .525}
            size_hint: .07, .08
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (0, .4, .66, 1) if self.state == "normal" else (0, .2, .46, 1)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos   
            Image:
                source: "./images/icons/download.png"
                size: download_morse_m.size[0] *0.9, download_morse_m.size[1] *0.9
                pos: download_morse_m.x*1.025, download_morse_m.y*1.01


        Button:
            id: github_m
            on_release: webbrowser.open("https://github.com/Hitijahujessy/morsifier")
            size_hint: 0.07,0.08
            pos_hint: {"x": .01, "top": .98}
            background_color: 0, 0, 0, 0
            canvas.after:
                Color:
                    rgba: (1, 1, 1, 1) if self.state == "normal" else (.8, .8, .8, 1)
                Rectangle:
                    pos: self.pos
                    source: "./images/github-mark.png"
                    size: github_m.size


<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 60
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 60
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)
